"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _codeSurfer = require("code-surfer");

var _codeSurfer2 = _interopRequireDefault(_codeSurfer);

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _mdxDeck = require("mdx-deck");

var _context = require("mdx-deck/dist/context");

var _Slide = require("mdx-deck/dist/Slide");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

exports.default = (0, _context.withDeck)((0, _Slide.withSlide)(function (_React$Component) {
  _inherits(_class2, _React$Component);

  function _class2() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, _class2);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = _class2.__proto__ || Object.getPrototypeOf(_class2)).call.apply(_ref, [this].concat(args))), _this), _this.handleKeyDown = function (e) {
      if (e.metaKey || e.ctrlKey || e.shiftKey || e.altKey) return;
      if (_this.props.deck.index !== _this.props.slide.index) return;
      var update = _this.props.deck.update;

      switch (e.key) {
        case "ArrowDown":
          e.preventDefault();
          update((0, _mdxDeck.incStep)(_this.props.stepsTop));
          break;
        case "ArrowUp":
          e.preventDefault();
          update((0, _mdxDeck.decStep)());
          break;
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(_class2, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      document.body.addEventListener("keydown", this.handleKeyDown);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      document.body.removeEventListener("keydown", this.handleKeyDown);
    }
  }, {
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate() {
      return this.props.deck.index === this.props.slide.index;
    }
  }, {
    key: "render",
    value: function render() {
      var _props = this.props,
          codeTop = _props.codeTop,
          codeBottom = _props.codeBottom,
          stepsTop = _props.stepsTop,
          stepsBottom = _props.stepsBottom,
          title = _props.title,
          showNumbers = _props.showNumbers,
          notes = _props.notes;
      var _props$deck = this.props.deck,
          step = _props$deck.step,
          mode = _props$deck.mode;

      var currentStepTop = step < 0 ? { notes: notes } : stepsTop[step] || stepsTop[0];
      var currentStepBottom = step < 0 ? { notes: notes } : stepsBottom[step] || stepsBottom[0];

      var topSize = codeTop.split("\n").length - 1;
      var bottomSize = codeBottom.split("\n").length - 1;

      return _react2.default.createElement(
        "div",
        {
          style: {
            height: "100vh",
            display: "flex",
            flexDirection: "column"
          }
        },
        _react2.default.createElement(
          "div",
          { style: { flex: topSize, overflow: "hidden" }, key: "codeTop" },
          _react2.default.createElement(_codeSurfer2.default, {
            code: codeTop,
            step: currentStepTop,
            showNumbers: showNumbers
          })
        ),
        _react2.default.createElement("div", { style: { height: "25px" } }),
        _react2.default.createElement(
          "div",
          {
            style: { flex: bottomSize, overflow: "hidden" },
            key: "codeBottom"
          },
          _react2.default.createElement(_codeSurfer2.default, {
            code: codeBottom,
            step: currentStepBottom,
            showNumbers: showNumbers
          })
        ),
        _react2.default.createElement("div", { style: { height: "25px" } })
      );
    }
  }]);

  return _class2;
}(_react2.default.Component)));